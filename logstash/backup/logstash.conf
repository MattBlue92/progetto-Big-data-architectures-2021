input {
  
    jdbc {
    	jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select * from history where from_unixtime(history.clock) > :sql_last_value AND from_unixtime(history.clock) < NOW()"

    }


    jdbc {
    	jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select * from history_str where from_unixtime(history_str.clock) > :sql_last_value AND from_unixtime(history_str.clock) < NOW()"
    }


    jdbc {
    	jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select * from history_text where from_unixtime(history_text.clock) > :sql_last_value AND from_unixtime(history_text.clock) < NOW()"
    }


    jdbc {
    	jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select * from history_uint where from_unixtime(history_uint.clock) > :sql_last_value AND from_unixtime(history_uint.clock) < NOW()"
    }


    jdbc {
    	jdbc_driver_library => "${LOGSTASH_JDBC_DRIVER_JAR_LOCATION}"
        jdbc_driver_class => "${LOGSTASH_JDBC_DRIVER}"
        jdbc_connection_string => "${LOGSTASH_JDBC_URL}"
        jdbc_user => "${LOGSTASH_JDBC_USERNAME}"
        jdbc_password => "${LOGSTASH_JDBC_PASSWORD}"
        schedule => "* * * * *"
        statement => "select * from history_log where from_unixtime(history_log.clock) > :sql_last_value AND from_unixtime(history_log.clock) < NOW()"
    }
  }


output {

  stdout { codec => json_lines }
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "history-migrate"
    document_type => "history"
  }

  stdout { codec => json_lines }
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "history_str-migrate"
    document_type => "history_str"
  }


  stdout { codec => json_lines }
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "history_text-migrate"
    document_type => "history_text"
  }


  stdout { codec => json_lines }
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "history_uint-migrate"
    document_type => "history_uint"
  }


  stdout { codec => json_lines }
  elasticsearch {
    hosts => "elasticsearch:9200"
    index => "history_log-migrate"
    document_type => "history_log"
  }

}
